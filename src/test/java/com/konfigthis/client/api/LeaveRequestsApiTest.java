/*
 * Timmi Absences API
 * Welcome on the documentation for Timmi Absences API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developers@lucca.fr
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.LeaveRequestsApproveDenyRequest;
import com.konfigthis.client.model.LeaveRequestsGetByIdResponse;
import com.konfigthis.client.model.LeaveRequestsListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LeaveRequestsApi
 */
@Disabled
public class LeaveRequestsApiTest {

    private static LeaveRequestsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new LeaveRequestsApi(apiClient);
    }

    /**
     * Approve or deny a leave request
     *
     * Approve or deny a single Leave Request by its unique identifier  Only the Leave Requests pending approval can be approved or denied.  A comment is required to deny a Leave Request. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void approveDenyTest() throws ApiException {
        String leaveRequestId = null;
        Boolean approved = null;
        Object comment = null;
        api.approveDeny(leaveRequestId)
                .approved(approved)
                .comment(comment)
                .execute();
        // TODO: test validations
    }

    /**
     * Request to cancel a leave request
     *
     * Request to cancel a single Leave Request by its unique identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelRequestTest() throws ApiException {
        String leaveRequestId = null;
        api.cancelRequest(leaveRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a leave request by id
     *
     * Retrieve a single Leave Request by its unique identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String leaveRequestId = null;
        LeaveRequestsGetByIdResponse response = api.getById(leaveRequestId)
                .execute();
        // TODO: test validations
    }

    /**
     * List leave requests
     *
     * Retrieve a list of Leave Requests
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        LeaveRequestsListResponse response = api.list()
                .execute();
        // TODO: test validations
    }

}
